buildscript {

    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:0.9.+'
    }

}

apply plugin: 'android-library'

allprojects {
    group project.GROUP
    version project.VERSION_NAME

    repositories {
        mavenCentral()
    }

    tasks.withType(Compile) {
        options.encoding = 'UTF-8'
    }
}

repositories {
    mavenCentral()
}

dependencies {
    compile 'com.android.support:support-v4:19.1.+'
    compile 'com.squareup.okhttp:okhttp:1.3.0'
    compile 'com.nineoldandroids:library:2.4.0'
    compile 'com.jakewharton:disklrucache:2.0.1'
    compile 'com.google.guava:guava:16.0.1'
}

android {
    compileSdkVersion Integer.parseInt(project.ANDROID_BUILD_SDK_VERSION)
    buildToolsVersion project.ANDROID_BUILD_TOOLS_VERSION

    defaultConfig {
        minSdkVersion Integer.parseInt(project.ANDROID_MIN_SDK)
        targetSdkVersion Integer.parseInt(project.ANDROID_BUILD_TARGET_SDK_VERSION)
    }

    sourceSets {

        main {
            manifest.srcFile 'src/main/AndroidManifest.xml'

            java.srcDirs = ['src/main/java']

            res.srcDirs = ['src/main/res']

            assets {
                srcDir 'assets'
            }
        }
    }

    lintOptions {
        abortOnError false
    }
}

android.libraryVariants.all { variant ->
    def name = variant.name
    task "javadoc$name"(type: Javadoc) {
        description = "Generates javadoc for build $name"
        failOnError = false
        destinationDir = new File(destinationDir, variant.baseName)
        source = files(variant.javaCompile.source)
        classpath = files(android.plugin.runtimeJarList, variant.javaCompile.classpath)
        options.links("http://docs.oracle.com/javase/7/docs/api/")
        options.links("http://d.android.com/reference/")
        exclude '**/R.html', '**/R.*.html'
    }
}

android.libraryVariants.all { variant ->
    def jarTask = project.tasks.create(name:"jar${variant.name.capitalize()}", type: Jar) {
        from            variant.javaCompile.destinationDir
        exclude         "**/R.class"
        exclude          "**/BuildConfig.class"
    }
    jarTask.dependsOn variant.javaCompile
    artifacts.add('archives', jarTask);
}

apply from: 'https://raw.github.com/mcxiaoke/gradle-mvn-push/master/gradle-mvn-push.gradle'
